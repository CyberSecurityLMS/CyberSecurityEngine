swagger: "2.0"
info:
  title: Web Platform Executor API
  description: REST API for running and testing user-submitted Python code in isolated Docker containers with pytest support.
  version: "2.0.0"

host: "localhost:5000"
basePath: "/"
schemes:
  - http

consumes:
  - multipart/form-data
produces:
  - application/json

paths:
  /prewarm:
    post:
      summary: Prewarm a Docker container for faster execution
      tags:
        - Container Management
      responses:
        200:
          description: Container prewarmed successfully or pool already full
          schema:
            type: object
            properties:
              status:
                type: string
                example: "Container prewarmed successfully"
        500:
          description: Failed to prewarm container
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Failed to prewarm container"

  /execute:
    post:
      summary: Upload and execute code inside Docker
      tags:
        - Code Execution
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          type: file
          required: true
          description: Python script to run (e.g. main.py)
      responses:
        200:
          description: Code executed successfully
          schema:
            type: object
            properties:
              session_id:
                type: string
                description: Unique ID of the created execution session
        400:
          description: No file was provided
          schema:
            type: object
            properties:
              error:
                type: string
                example: "No file provided"
        500:
          description: Docker or execution error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"

  /execute_pytest:
    post:
      summary: Execute pytest against submitted code
      tags:
        - Testing
      consumes:
        - multipart/form-data
      parameters:
        - name: files
          in: formData
          type: file
          required: true
          description: Multiple files including test files (should end with _test.py or start with test_)
      responses:
        200:
          description: All tests passed
          schema:
            type: object
            properties:
              status:
                type: string
                example: "success"
              exit_code:
                type: integer
                example: 0
              summary:
                type: object
                properties:
                  passed:
                    type: integer
                    example: 5
                  failed:
                    type: integer
                    example: 0
                  total:
                    type: integer
                    example: 5
                  duration:
                    type: number
                    example: 0.42
              raw_output:
                type: string
                description: Full pytest output
              session_id:
                type: string
                description: Unique session ID
        206:
          description: Some tests passed, some failed
          schema:
            $ref: "#/definitions/PytestResponse"
        400:
          description: Test execution failed
          schema:
            $ref: "#/definitions/PytestResponseFailure"
        500:
          description: Internal server error
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"
              status:
                type: string
                example: "failure"
              exit_code:
                type: integer
                example: -1

  /result/{session_id}:
    get:
      summary: Get logs from execution by session ID
      tags:
        - Code Execution
      parameters:
        - name: session_id
          in: path
          type: string
          required: true
          description: Session ID returned from the /execute endpoint
      responses:
        200:
          description: Execution finished, logs returned
          schema:
            type: object
            properties:
              logs:
                type: string
                description: Output logs from the script execution
        202:
          description: Execution is still running
          schema:
            type: object
            properties:
              status:
                type: string
                example: "still running"
        404:
          description: Session not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Session not found"
        500:
          description: Error while retrieving logs
          schema:
            type: object
            properties:
              error:
                type: string

  /cleanup/{session_id}:
    post:
      summary: Cleanup session and container
      tags:
        - Code Execution
      parameters:
        - name: session_id
          in: path
          type: string
          required: true
          description: ID of the session to be cleaned up
      responses:
        200:
          description: Session stopped and removed successfully
          schema:
            type: object
            properties:
              status:
                type: string
                example: "cleaned up"
        404:
          description: Session not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Session not found"
        500:
          description: Cleanup error
          schema:
            type: object
            properties:
              error:
                type: string

definitions:
  PytestResponse:
    type: object
    properties:
      status:
        type: string
        example: "partial_success"
      exit_code:
        type: integer
        example: 1
      summary:
        type: object
        properties:
          passed:
            type: integer
            example: 3
          failed:
            type: integer
            example: 2
          total:
            type: integer
            example: 5
          duration:
            type: number
            example: 0.38
      raw_output:
        type: string
        description: Full pytest output
      session_id:
        type: string
        description: Unique session ID
  PytestResponseFailure:
    type: object
    properties:
      status:
        type: string
        example: "failure"
      exit_code:
        type: integer
        example: 1
      summary:
        type: object
        properties:
          passed:
            type: integer
            example: 0
          failed:
            type: integer
            example: 5
          total:
            type: integer
            example: 5
          duration:
            type: number
            example: 0.42
      raw_output:
        type: string
        description: Full pytest output
      session_id:
        type: string
        description: Unique session ID